name: Create release wheel file

on:
  push:
    tags:
      - 'v*'

env:
  LANG: "zh_CN.UTF-8"

jobs:
  build-deploy:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set Locale
      run: |
        sudo locale-gen zh_CN.UTF-8
        sudo update-locale LANG=zh_CN.UTF-8

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build whl package
      run: python setup.py bdist_wheel

    - name: Get Name of Artifact
      id: get_artifact_name
      run: |
        ARTIFACT_PATH=$(ls dist/*.whl | tail -n 1)
        ARTIFACT_NAME=$(basename ${ARTIFACT_PATH})
        echo "::set-output name=wheel_path::${ARTIFACT_PATH}"
        echo "::set-output name=wheel_name::${ARTIFACT_NAME}"
        echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_artifact_name.outputs.tag }}
        release_name: ${{ steps.get_artifact_name.outputs.tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.get_artifact_name.outputs.wheel_path }}
        asset_name: ${{ steps.get_artifact_name.outputs.wheel_name }}
        asset_content_type: application/zip
